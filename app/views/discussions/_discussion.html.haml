- unread = user_signed_in? && discussion.unread?(current_user)
- tr_class = unread ? 'alert-unread' : ''
%li.list-group-item(style='padding: 0;')
  %div[discussion]{ class: tr_class }
    %div(style='padding: 10px;')
      - if local_assigns[:show_canoe]
        %small
          = link_to canoe_home_path(discussion.canoe) do
            = image_tag discussion.canoe.logo_url, style: 'width: 13px; height: 13px; margin-right: 1px; border: 1px solid #efefef;'
            = discussion.canoe.title
      %h4
        %span.label.label-default(style='padding: 0 0.3em; background-color:rgba(153, 153, 153, 0.4);')= discussion.sequential_id
        = link_to discussion_home_path(discussion) do
          = highlight(discussion.subject, params[:q])
        %small
          %span
            %i.fa.fa-comments
            = discussion.opinions.count
          %span
            %i.fa.fa-rocket
            = discussion.proposals.count
      - if discussion.decision.present?
        .discussion__decision__body
          %i.fa.fa-thumb-tack
          - if discussion.updated_decision?
            %span.label.label-default 업데이트
          = highlight(truncate(discussion.decision, length: 70), params[:q])
    - item = discussion.newest_proposal_or_opinion(params[:q])
    - if item.present?
      %div(style='background-color: #f5f5f5; font-size: 85%;')
        .media(style='padding: 20px; background-color: #fafafa;')
          .media-left.media-top
            = user_byline item.user, true
          .media-body
            .media-head.text-muted
              = item.user.nickname
              %i.fa.fa-clock-o
              = date_f item.created_at
            .discussion__newest_proposal_or_opinion__body
              - if item.is_a?(Proposal)
                %strong(style='margin-right: 5px')
                  제안
                  %span.label.label-default>
                    = item.sequential_id
              = highlight(smart_body(item.body, nil, wrapper_tag: 'span'), params[:q])
              %span(style='margin-left: 1em;')


